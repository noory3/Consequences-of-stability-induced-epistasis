#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
author: N. Youssef

Calculates the scaling value for correct branch length interpretation (as the expected time per substitution)
"""
import numpy as np
import helpers
import pickle
num_cores = 10

protein = "1pek"
Neff = int(1e2); num_substiutions = int(1000)

if protein == "1qhw":
	#mutation model 
	pi_nuc = [0.19675, 0.31762, 0.28032, 0.20532] # nucleotide frequencies ['T' ,'C' ,'G' ,'A'] 
	GTR = helpers.MutationMatrix(pi_nuc, 4.49765,1,1,1,1, 4.49765) # kappa = 4.49765
	# start sequence
	CodonSeq = "TTACATGAAAGAGAAGAAAGGGAAGACAAGTTTGATCCCAGATTACCTGCGGCGGAGGAGATGTTAATGTACAGGCTTATGGAAGACCTTCGCAGAGCAGACCGTGACATGGGTCCGGACTTTAAAAAGGACGAGAGGGACAAACGGCGCTATATAATTTGGCAGCGCAAATTCATTGATCGTCGCTTTCTACCCAGACTTTTCTTAAGACGCTGCAGACTAGAGGATCTATGGGAAGATTCTTCCGATAGGCGGAAGGGAATGGAAGACTTAGACCCGAGGAGAGAGCGGACTCATAAGCGGGACCTCATCCTATCAGATGGTGAGCCTGCCCTAATAAGGGTTAAAAAGAAAAAGAGGGTGGCTCCGTGTACCGATTCTGAAGAACTCGATCTAATGCAAAACTTTCTGGAGCGCCGTCGTTGCTGCAGGATCATCGAAGTTGACGCTCTCTTTGATATCTGTTGCATGCTCCAAACGTTTACCCGGTTTATCGAAGACATCTTGAGAAGGATCGGCAAATCTAAAAAACGTCTCCGCAGAGATAAGAGATTACTCCAAATTCGGAAACGCACTATTGTTCTTAAGTTACTAGACTCTCCAATCGCGAAACTGCCTGACATCGCCCTAGACAGGATTGATGAGAGGGAACCATCTTGGCCCCCATACATCTTATGTCCCTGTCAGTTTGAGGTGCAAACAGAAGACACGTGGTGGGAAGACGACCCGGAGCTCGAACTGCTTTTGCTACTATGTGACTGTCTGGTCATGAAGATGTTTAGAAAACGTGGTTCATTGCTAATGAGGGAAAAGAGGGATGACCGAATGATGGACACAGCCAGGGACAACGAGATTATTATCATTCTCCGGCTAAATGATTGGCCTAGACTAAAAGAATGT"

elif protein == "2ppn":
	pi_nuc = [0.19246, 0.24559, 0.29365, 0.26830]
	GTR = helpers.MutationMatrix(pi_nuc, 2.50275 ,1,1,1,1,2.50275)
	CodonSeq = "GCGCTAGAGATCGAATTCGAGTTCTTCCATGACCAGAGGCAAATGTGTAAATTTCAATGCCAATGCTGCTTGCATAAGAAAAAGATGCTATGGTGTATTTGGGAAATGATTGATCATGATCAGCAGATCGATTTTATTTGTTTTCGTTGTATGCATATGGATCACATGATAATCTGCTTCGTGTTCTGTTTTATTTTCCCACGTCACTTTCGATTCAAACTGAAGATTGGAAAGGATATTCTATGGAAGCGGGATATGATGCGTATTATATGGTGGGAAGAAATGTTAATCGAAATGGATATAGAATGCTGCCAACCTCCG"

elif protein == "1pek":
	pi_nuc = [0.20853, 0.34561, 0.25835, 0.18750]
	GTR = helpers.MutationMatrix(pi_nuc, 0.90382 ,1,1,1,1, 0.90382)
	CodonSeq = "GAGTTCTTCTGGATGCTTCATGAAGAGTTTGCTCGCTTTCACGGGATGTCGGAAGATGGGATTATTTTCAACCATCACATCACATTGGGTCAGCGCTGGTTCATGTTCGTGCTGGACAAGGGCATAGAGTTGCACCATGATGATTTTGAATTTGAATTTTGTGGTTGCTTCGAGAAGCGGTTAGGCCGCTGCGACGGTAATGGGCGAGGTGAGCCTTGGGCCCCTTATATGATCACGAAACATGAGGCGTTTATTATACGAATGCACTTATTCCACTTCGAGGTAGATGAAATGAACGAAAAAAAAATGCACTGGCAATTGCCTGATATGATGCAGTTCTTCAAGCGGTGTTTTATCATTTGCTCTTGCGAGCGTATATGCATGTTTTGGCTCCAGATAAGGGATCGCAAGGATATGTCGCATAATACATCTTGGAAAGACATGATGTATGAAGTGTTCTTTTTTATGGTCGGCGGGGATAATGAATGCGTTGACCCCAAAGACGAGGACATTCAAAACATGGACTACGTTCTCGCAGTCGGTGGGGATGATAAGAGGAATCGGCGCGGGTGTTGTGATCGTCGCGAGAAGACGACCCTGATCTGCGGCCCTGGGTCTTTTTGGTTACGCCGACGAAGGCGAGAATGGACCCAGTGTTTCTTAGGAACCCCGATGGGAGTACCCATGTTTTGGTTCATGTTTATGTGCCTCATGGATTTCAAAATCAAATGTTTTGCAGACTTACTCCGCGGTATAATCACGATGATGTGCAAGCACGATCAGGAACAACGATCTGTGGACGACATCGAATTATGTTTCTTTTGTATGTATATAGAC"

# load contact map# 
with open('../contact_maps/'+ protein +'_DICT.txt', "rb") as file:
    contact_map = pickle.load(file)

def ScalingExpSub(CodonSeq, number_substitutions):
	#start_sequence 
    Sold = helpers.Codon_to_Cindex(CodonSeq)
    T0 = 0 
    for i in range(0, number_substitutions):
        Q = helpers.TransitionVector(Sold, num_cores, Neff, GTR, contact_map)
        site, newCodon, rate = helpers.NextSubstitution(Q)
        Snew = list(Sold)
        Snew[site] = newCodon
        s = np.random.exponential(1/rate)
        T0 += s 
        Sold = list(Snew)
        print(str(i) + " " + str(T0), flush = True)
    return (T0, Sold)

T0, StartSeq = ScalingExpSub(CodonSeq, num_substiutions)
print("Final Time for Neff = " + str(Neff) + " and "+ str(numSubstiutions) + "substitutions is " + str(T0), flush = True)
